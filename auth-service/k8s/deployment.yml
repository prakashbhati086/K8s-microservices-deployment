apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  labels:
    app: auth-service
    tier: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: auth-service
      tier: backend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: auth-service
        tier: backend
    spec:
      containers:
        - name: auth-service
          image: prakashbhati086/microauthx-auth-service:v29
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3000
          env:
            - name: MONGO_URI
              value: "mongodb://mongo-service:27017/microauthx"
            - name: SESSION_SECRET
              value: "microauthxsecret"
            - name: PORT
              value: "3000"
          envFrom:
            - secretRef:
                name: auth-secrets
            - configMapRef:
                name: auth-config
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 15
            periodSeconds: 20
          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  labels:
    app: auth-service
    tier: backend
spec:
  selector:
    app: auth-service
    tier: backend
  ports:
    - name: http
      protocol: TCP
      port: 3000
      targetPort: 3000
  type: ClusterIP
